{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\n\n/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\nimport axios from 'axios';\nexport default function ajax(url, data = {}, type = 'GET') {\n  return new Promise((resolve, reject) => {\n    let promise; // 1. 执行异步ajax请求\n\n    if (type === 'GET') {\n      // 发GET请求\n      promise = axios.get(url, {\n        // 配置对象\n        params: data // 指定请求参数\n\n      });\n    } else {\n      // 发POST请求\n      promise = axios.post(url, data);\n    } // 2. 如果成功了, 调用resolve(value)\n\n\n    promise.then(response => {\n      resolve(response.data); // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\n    }).catch(error => {\n      // reject(error)\n      _message.error('请求出错了: ' + error.message);\n    });\n  });\n} // 请求登陆接口\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\n// 添加用户\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()","map":{"version":3,"sources":["/Users/jinpengwu/Desktop/react/gitproject/Projects/admin_work/react_original/src/api/ajax.js"],"names":["axios","ajax","url","data","type","Promise","resolve","reject","promise","get","params","post","then","response","catch","error","message"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,IAAT,CAAcC,GAAd,EAAmBC,IAAI,GAAC,EAAxB,EAA4BC,IAAI,GAAC,KAAjC,EAAwC;AAErD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAIC,OAAJ,CADsC,CAEtC;;AACA,QAAGJ,IAAI,KAAG,KAAV,EAAiB;AAAE;AACjBI,MAAAA,OAAO,GAAGR,KAAK,CAACS,GAAN,CAAUP,GAAV,EAAe;AAAE;AACzBQ,QAAAA,MAAM,EAAEP,IADe,CACV;;AADU,OAAf,CAAV;AAGD,KAJD,MAIO;AAAE;AACPK,MAAAA,OAAO,GAAGR,KAAK,CAACW,IAAN,CAAWT,GAAX,EAAgBC,IAAhB,CAAV;AACD,KATqC,CAUtC;;;AACAK,IAAAA,OAAO,CAACI,IAAR,CAAaC,QAAQ,IAAI;AACvBP,MAAAA,OAAO,CAACO,QAAQ,CAACV,IAAV,CAAP,CADuB,CAEzB;AACC,KAHD,EAGGW,KAHH,CAGSC,KAAK,IAAI;AAChB;AACA,eAAQA,KAAR,CAAc,YAAYA,KAAK,CAACC,OAAhC;AACD,KAND;AAOD,GAlBM,CAAP;AAqBD,C,CAED;AACA;AACA;AACA","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if(type==='GET') { // 发GET请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      })\r\n    } else { // 发POST请求\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n    }).catch(error => {\r\n      // reject(error)\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n// 请求登陆接口\r\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\r\n// 添加用户\r\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()\r\n"]},"metadata":{},"sourceType":"module"}